name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: ${{ matrix.os }} / Stable
    runs-on: ${{ matrix.os }}
    strategy:
          matrix:
            include:
              - os: ubuntu-latest
                rust: stable
                target: x86_64-unknown-linux-musl
              - os: windows-latest
                rust: stable
                target: x86_64-pc-windows-msvc
              - os: macos-latest
                rust: stable
                target: x86_64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Install packages (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          ci/ubuntu-install-packages

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
          
